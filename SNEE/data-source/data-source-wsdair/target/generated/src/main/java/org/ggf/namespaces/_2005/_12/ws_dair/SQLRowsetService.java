
/*
 * 
 */

package org.ggf.namespaces._2005._12.ws_dair;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;
import org.ggf.namespaces._2005._12.ws_dai.CoreDataAccessPT;
import org.ggf.namespaces._2005._12.ws_dai.CoreResourceListPT;

/**
 * This class was generated by Apache CXF 2.2.8
 * Thu Jul 14 09:06:52 EEST 2011
 * Generated source version: 2.2.8
 * 
 */


@WebServiceClient(name = "SQLRowsetService", 
                  wsdlLocation = "file:/home/lebiathan/Programming/galileo/workspace-ssg4e/snee-a/SNEE/data-source/data-source-wsdair/target/wsdl/wsdair/sqlrowset_service_service.wsdl",
                  targetNamespace = "http://www.ggf.org/namespaces/2005/12/WS-DAIR") 
public class SQLRowsetService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.ggf.org/namespaces/2005/12/WS-DAIR", "SQLRowsetService");
    public final static QName RowsetServiceRowsetPT = new QName("http://www.ggf.org/namespaces/2005/12/WS-DAIR", "RowsetServiceRowsetPT");
    public final static QName RowsetServiceCoreDataAccessPT = new QName("http://www.ggf.org/namespaces/2005/12/WS-DAIR", "RowsetServiceCoreDataAccessPT");
    public final static QName RowsetServiceCoreResourceListPT = new QName("http://www.ggf.org/namespaces/2005/12/WS-DAIR", "RowsetServiceCoreResourceListPT");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/lebiathan/Programming/galileo/workspace-ssg4e/snee-a/SNEE/data-source/data-source-wsdair/target/wsdl/wsdair/sqlrowset_service_service.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/home/lebiathan/Programming/galileo/workspace-ssg4e/snee-a/SNEE/data-source/data-source-wsdair/target/wsdl/wsdair/sqlrowset_service_service.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public SQLRowsetService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SQLRowsetService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SQLRowsetService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns SQLRowsetPT
     */
    @WebEndpoint(name = "RowsetServiceRowsetPT")
    public SQLRowsetPT getRowsetServiceRowsetPT() {
        return super.getPort(RowsetServiceRowsetPT, SQLRowsetPT.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SQLRowsetPT
     */
    @WebEndpoint(name = "RowsetServiceRowsetPT")
    public SQLRowsetPT getRowsetServiceRowsetPT(WebServiceFeature... features) {
        return super.getPort(RowsetServiceRowsetPT, SQLRowsetPT.class, features);
    }
    /**
     * 
     * @return
     *     returns CoreDataAccessPT
     */
    @WebEndpoint(name = "RowsetServiceCoreDataAccessPT")
    public CoreDataAccessPT getRowsetServiceCoreDataAccessPT() {
        return super.getPort(RowsetServiceCoreDataAccessPT, CoreDataAccessPT.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CoreDataAccessPT
     */
    @WebEndpoint(name = "RowsetServiceCoreDataAccessPT")
    public CoreDataAccessPT getRowsetServiceCoreDataAccessPT(WebServiceFeature... features) {
        return super.getPort(RowsetServiceCoreDataAccessPT, CoreDataAccessPT.class, features);
    }
    /**
     * 
     * @return
     *     returns CoreResourceListPT
     */
    @WebEndpoint(name = "RowsetServiceCoreResourceListPT")
    public CoreResourceListPT getRowsetServiceCoreResourceListPT() {
        return super.getPort(RowsetServiceCoreResourceListPT, CoreResourceListPT.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CoreResourceListPT
     */
    @WebEndpoint(name = "RowsetServiceCoreResourceListPT")
    public CoreResourceListPT getRowsetServiceCoreResourceListPT(WebServiceFeature... features) {
        return super.getPort(RowsetServiceCoreResourceListPT, CoreResourceListPT.class, features);
    }

}
