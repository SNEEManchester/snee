#!/usr/bin/env python

import sys, os, subprocess, time

# First thing, append the utils directory to the search path.
utils_dir = os.path.dirname(__file__) + '/utils'
sys.path.append(utils_dir)

# Now we can import the basestation module
import basestation
from error_handling import handleReturnCode

# Now add the snee utilities to PATH
os.environ['PATH'] = utils_dir + ':' + os.environ['PATH']

# Discover the environment variables
basestation = basestation.find_basestation()
source = 'serial@' + basestation + ':115200'

# Check if we are trying to flash the basestation
if sys.argv[2] == sys.argv[3]:
# If we are we need to overwrite the running image on the basestation with the
# new image. NOTE! You should always flash the basestation last because you
# will be unable to flash remote motes after the re-image occurs.

# Set the symbols in the file
    ihex_file = sys.argv[1].replace('tos_image.xml', 'main.ihex')
    retcode = subprocess.call(['tos-set-symbols', '--objcopy', 'msp430-objcopy', '--objdump', 'msp430-objdump', '--target', 'ihex', ihex_file, ihex_file + '-' + sys.argv[3], 'TOS_NODE_ID=' + sys.argv[3], 'ActiveMessageAddressC__addr=' + sys.argv[3]])
    handleReturnCode(retcode)    
# Flash the mote
    print "Installing query fragment on mote " + str(sys.argv[3])
    retcode = subprocess.call(['tos-bsl', '--telosb', '-c', basestation, '-r', '-e', '-I', '-p', ihex_file + '-' + sys.argv[3]])
    handleReturnCode(retcode, 'Couldn\'t install OTA basestation on mote')
else:
# If not call tos-ota
    print "Installing query fragment on mote " + str(sys.argv[2])
    retcode = subprocess.call(['python', utils_dir+'/tos-ota', source, sys.argv[2], '--inject', '2', sys.argv[1]])
    
    retry_count = 0
    if retcode != 0: # If the tos-ota call didn't complete successfully
        while retry_count < 4 and retcode != 0:
            retry_count = retry_count + 1
                
            print
            print "Install failed. Waiting for a moment before retrying..."
            time.sleep(5)

            print "Retrying (" + str(retry_count) + ") ..."
            retcode = subprocess.call(['python', utils_dir+'/tos-ota', source, sys.argv[2], '--inject', '2', sys.argv[1]])

    # Check that everything is in order
    if retcode != 0:
        print
        print "E_FAIL: Couldn\'t install OTA server on mote"
        sys.exit(1)

